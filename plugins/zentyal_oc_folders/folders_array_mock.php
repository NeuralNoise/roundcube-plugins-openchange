<?php

    /**
     * Returns a mocked array of folders
     *
     * Zentyal Openchange PHPbindings will return an array of folders
     * with a custom structure. This class mocks a multilevel folder
     * structure array like it would have been generated by those PHPbindings
     *
     * @author  Miguel Julian <mjulian@zentyal.com>
     */
    class folders_array_mock
    {
        private $folders_array;

        /**
         * Creates the array while construction
         *
         * Creates a four depth folders structure with different "store"/"node"
         * types (like contacts, calendar or mail).
         *
         * @author  Miguel Julian <mjulian@zentyal.com>
         *
         * TODO: Create the whole example store structure
         */
        function __construct(){
            $this->folders_array = array(
                'name'  => "OpenChange Mailbox: jkerihuel",
                'childs'=> array(),
            );

            array_push($this->folders_array['childs'], $this->get_folder('Personal Calendar', -8286327545733840895, "", "IPF.Task", 0, 0));
            array_push($this->folders_array['childs'], $this->get_folder('Personal Address Book', -8358385139771768831, "", "IPF.Contact", 0, 0));
            array_push($this->folders_array['childs'], $this->get_folder('Sync Issues', -7998097169582129151, "", "IPF.Note", 0, 0));
            array_push($this->folders_array['childs'][2]['childs'], $this->get_folder('Conflicts', -7709865693918789631, "", "IPF.Note", 0, 0));
            array_push($this->folders_array['childs'][2]['childs'], $this->get_folder('Local Failures', -7637808099880861695, "", "IPF.Note", 0, 0));
            array_push($this->folders_array['childs'][2]['childs'], $this->get_folder('Server Failures', -7565750505842933759, "", "IPF.Note", 0, 0));
            array_push($this->folders_array['childs'][2]['childs'][2]['childs'], $this->get_folder('Third level', -9565750505842933759, "", "IPF.Note", 0, 0));
            array_push($this->folders_array['childs'][2]['childs'][2]['childs'][0]['childs'], $this->get_folder('Forth level', -9565750805842933759, "", "IPF.Note", 0, 0));
        }

        // Returns an array which will be a folder node
        private function get_folder($name, $fid, $comment="", $container, $total=0, $uread=0){
            $folder = array(
                'name'      => $name,
                'fid'       => $fid,
                'comment'   => $comment,
                'container' => $container,
                'total'     => $total,
                'uread'     => $uread,
                'childs'    => array()
            );

            return $folder;
        }

        // Returns the built array
        function get_array(){
            return $this->folders_array;
        }

    }
?>
